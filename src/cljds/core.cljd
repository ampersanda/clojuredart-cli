(ns cljds.core
  (:require ["dart:io" :refer [exit]]
            [cljds.utils.std :refer [!!]]
            [cljds.generators.dart :as gdart]
            [cljds.generators.flutter :as gflutter]))

(defn main [arguments]
  ;; when no commands
  (when (nil? (seq arguments))
    (!! "Command is required. e.g. cljds dart")
    (exit 2))

  ;; when command only
  (let [cmd (first arguments)
        name (second arguments)]
    (condp = cmd
      "dart" (gdart/generate name)
      "flutter" (gflutter/generate name)
      "nope")))
